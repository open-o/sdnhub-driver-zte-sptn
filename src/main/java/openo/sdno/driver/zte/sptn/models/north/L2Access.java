/**
 * L3VpnService Sbi Adapter Interface
 * Orchestrator SDN-O SBI Reference V1.0-L3VPN
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.north;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Layer2 Access Configuration
 */
@ApiModel(description = "Layer2 Access Configuration")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-08-12T11:26:39.981+08:00")
public class L2Access {

  @SerializedName("accessType")
  private String accessType = null;

  @SerializedName("dot1qVlanBitmap")
  private Integer dot1qVlanBitmap = null;

  @SerializedName("qinqSvlanBitmap")
  private Integer qinqSvlanBitmap = null;

  @SerializedName("qinqCvlanBitmap")
  private Integer qinqCvlanBitmap = null;

  @SerializedName("pushVlanId")
  private Integer pushVlanId = null;

  @SerializedName("swapVlanId")
  private Integer swapVlanId = null;

  @SerializedName("accessAction")
  private String accessAction = null;

  public L2Access accessType(String accessType) {
    this.accessType = accessType;
    return this;
  }

  /**
   * Access type(port, dot1q, qinq)
   *
   * @return accessType
   */
  @ApiModelProperty(example = "null", required = true, value = "Access type(port, dot1q, qinq)")
  public String getAccessType() {
    return accessType;
  }

  public void setAccessType(String accessType) {
    this.accessType = accessType;
  }

  public L2Access dot1qVlanBitmap(Integer dot1qVlanBitmap) {
    this.dot1qVlanBitmap = dot1qVlanBitmap;
    return this;
  }

  /**
   * Vlan Bitmap in dot1q access type minimum: 1.0 maximum: 4095.0
   *
   * @return dot1qVlanBitmap
   */
  @ApiModelProperty(example = "null", value = "Vlan Bitmap in dot1q access type")
  public Integer getDot1qVlanBitmap() {
    return dot1qVlanBitmap;
  }

  public void setDot1qVlanBitmap(Integer dot1qVlanBitmap) {
    this.dot1qVlanBitmap = dot1qVlanBitmap;
  }

  public L2Access qinqSvlanBitmap(Integer qinqSvlanBitmap) {
    this.qinqSvlanBitmap = qinqSvlanBitmap;
    return this;
  }

  /**
   * Svlan Bitmap in qing access type minimum: 1.0 maximum: 4095.0
   *
   * @return qinqSvlanBitmap
   */
  @ApiModelProperty(example = "null", value = "Svlan Bitmap in qing access type")
  public Integer getQinqSvlanBitmap() {
    return qinqSvlanBitmap;
  }

  public void setQinqSvlanBitmap(Integer qinqSvlanBitmap) {
    this.qinqSvlanBitmap = qinqSvlanBitmap;
  }

  public L2Access qinqCvlanBitmap(Integer qinqCvlanBitmap) {
    this.qinqCvlanBitmap = qinqCvlanBitmap;
    return this;
  }

  /**
   * Cvlan Bitmap in qing access type minimum: 1.0 maximum: 4095.0
   *
   * @return qinqCvlanBitmap
   */
  @ApiModelProperty(example = "null", value = "Cvlan Bitmap in qing access type")
  public Integer getQinqCvlanBitmap() {
    return qinqCvlanBitmap;
  }

  public void setQinqCvlanBitmap(Integer qinqCvlanBitmap) {
    this.qinqCvlanBitmap = qinqCvlanBitmap;
  }

  public L2Access pushVlanId(Integer pushVlanId) {
    this.pushVlanId = pushVlanId;
    return this;
  }

  /**
   * Push Vlan Id minimum: 1.0 maximum: 4095.0
   *
   * @return pushVlanId
   */
  @ApiModelProperty(example = "null", value = "Push Vlan Id")
  public Integer getPushVlanId() {
    return pushVlanId;
  }

  public void setPushVlanId(Integer pushVlanId) {
    this.pushVlanId = pushVlanId;
  }

  public L2Access swapVlanId(Integer swapVlanId) {
    this.swapVlanId = swapVlanId;
    return this;
  }

  /**
   * Swap Vlan Id minimum: 1.0 maximum: 4095.0
   *
   * @return swapVlanId
   */
  @ApiModelProperty(example = "null", value = "Swap Vlan Id")
  public Integer getSwapVlanId() {
    return swapVlanId;
  }

  public void setSwapVlanId(Integer swapVlanId) {
    this.swapVlanId = swapVlanId;
  }

  public L2Access accessAction(String accessAction) {
    this.accessAction = accessAction;
    return this;
  }

  /**
   * Access action (\"keep\",\"push\", \"pop\",\"swap\"). Default - \"keep\". keep(0, \"keep\"),
   * push(1, \"push\"), pop(2, \"pop\"), swap(3, \"swap\")
   *
   * @return accessAction
   */
  @ApiModelProperty(example = "null",
                    value = "Access action (\"keep\",\"push\", \"pop\",\"swap\"). Default - \"keep\". keep(0, \"keep\"), push(1, \"push\"), pop(2, \"pop\"), swap(3, \"swap\")")
  public String getAccessAction() {
    return accessAction;
  }

  public void setAccessAction(String accessAction) {
    this.accessAction = accessAction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    L2Access l2Access = (L2Access) o;
    return Objects.equals(this.accessType, l2Access.accessType) &&
           Objects.equals(this.dot1qVlanBitmap, l2Access.dot1qVlanBitmap) &&
           Objects.equals(this.qinqSvlanBitmap, l2Access.qinqSvlanBitmap) &&
           Objects.equals(this.qinqCvlanBitmap, l2Access.qinqCvlanBitmap) &&
           Objects.equals(this.pushVlanId, l2Access.pushVlanId) &&
           Objects.equals(this.swapVlanId, l2Access.swapVlanId) &&
           Objects.equals(this.accessAction, l2Access.accessAction);
  }

  @Override
  public int hashCode() {
    return Objects
        .hash(accessType, dot1qVlanBitmap, qinqSvlanBitmap, qinqCvlanBitmap, pushVlanId, swapVlanId,
              accessAction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class L2Access {\n");

    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    dot1qVlanBitmap: ").append(toIndentedString(dot1qVlanBitmap)).append("\n");
    sb.append("    qinqSvlanBitmap: ").append(toIndentedString(qinqSvlanBitmap)).append("\n");
    sb.append("    qinqCvlanBitmap: ").append(toIndentedString(qinqCvlanBitmap)).append("\n");
    sb.append("    pushVlanId: ").append(toIndentedString(pushVlanId)).append("\n");
    sb.append("    swapVlanId: ").append(toIndentedString(swapVlanId)).append("\n");
    sb.append("    accessAction: ").append(toIndentedString(accessAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

