/**
 * SDN-O SPTN Controller Driver SBI Interface
 * SDN-O SPTN Controller Driver SBI Interface
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.south;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;


/**
 * Eline
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-08-12T10:40:00.335+08:00")
public class Eline {

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("user-label")
  private String userLabel = null;

  @SerializedName("parent-ncd-id")
  private String parentNcdId = null;

  @SerializedName("admin-status")
  private AdminStatus adminStatus = null;

  @SerializedName("operate-status")
  private OperateStatus operateStatus = null;

  @SerializedName("snc-type")
  private Integer sncType = null;

  @SerializedName("interconnection-mode")
  private Integer interconnectionMode = null;

  @SerializedName("ingress-end-points")
  private ServiceEndPoints ingressEndPoints = null;

  @SerializedName("egress-end-points")
  private ServiceEndPoints egressEndPoints = null;

  @SerializedName("snc-switch")
  private SncSwitch sncSwitch = null;

  @SerializedName("snc-pws")
  private SncPws sncPws = null;

  public Eline id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Eline Connection UUID
   *
   * @return id
   */
  @ApiModelProperty(example = "null", required = true, value = "Eline Connection UUID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Eline name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Eline Connection name(Only used within domain)
   *
   * @return name
   */
  @ApiModelProperty(example = "null", value = "Eline Connection name(Only used within domain)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Eline userLabel(String userLabel) {
    this.userLabel = userLabel;
    return this;
  }

  /**
   * Eline Connection userlabel
   *
   * @return userLabel
   */
  @ApiModelProperty(example = "null", required = true, value = "Eline Connection userlabel")
  public String getUserLabel() {
    return userLabel;
  }

  public void setUserLabel(String userLabel) {
    this.userLabel = userLabel;
  }

  public Eline parentNcdId(String parentNcdId) {
    this.parentNcdId = parentNcdId;
    return this;
  }

  /**
   * ID of parent NCD
   *
   * @return parentNcdId
   */
  @ApiModelProperty(example = "null", value = "ID of parent NCD")
  public String getParentNcdId() {
    return parentNcdId;
  }

  public void setParentNcdId(String parentNcdId) {
    this.parentNcdId = parentNcdId;
  }

  public Eline adminStatus(AdminStatus adminStatus) {
    this.adminStatus = adminStatus;
    return this;
  }

  /**
   * Get adminStatus
   *
   * @return adminStatus
   */
  @ApiModelProperty(example = "null", value = "")
  public AdminStatus getAdminStatus() {
    return adminStatus;
  }

  public void setAdminStatus(AdminStatus adminStatus) {
    this.adminStatus = adminStatus;
  }

  public Eline operateStatus(OperateStatus operateStatus) {
    this.operateStatus = operateStatus;
    return this;
  }

  /**
   * Get operateStatus
   *
   * @return operateStatus
   */
  @ApiModelProperty(example = "null", value = "")
  public OperateStatus getOperateStatus() {
    return operateStatus;
  }

  public void setOperateStatus(OperateStatus operateStatus) {
    this.operateStatus = operateStatus;
  }

  public Eline sncType(Integer sncType) {
    this.sncType = sncType;
    return this;
  }

  /**
   * The Type of Eline, currently only use 1(Simple)
   *
   * @return sncType
   */
  @ApiModelProperty(example = "null", value = "The Type of Eline, currently only use 1(Simple)")
  public Integer getSncType() {
    return sncType;
  }

  public void setSncType(Integer sncType) {
    this.sncType = sncType;
  }

  public Eline interconnectionMode(Integer interconnectionMode) {
    this.interconnectionMode = interconnectionMode;
    return this;
  }

  /**
   * Mode of inter-connection between sub-domains, including 1(nni-nni), 2(uni-uni)
   *
   * @return interconnectionMode
   */
  @ApiModelProperty(example = "null",
                    value = "Mode of inter-connection between sub-domains, including 1(nni-nni), 2(uni-uni)")
  public Integer getInterconnectionMode() {
    return interconnectionMode;
  }

  public void setInterconnectionMode(Integer interconnectionMode) {
    this.interconnectionMode = interconnectionMode;
  }

  public Eline ingressEndPoints(ServiceEndPoints ingressEndPoints) {
    this.ingressEndPoints = ingressEndPoints;
    return this;
  }

  /**
   * Get ingressEndPoints
   *
   * @return ingressEndPoints
   */
  @ApiModelProperty(example = "null", value = "")
  public ServiceEndPoints getIngressEndPoints() {
    return ingressEndPoints;
  }

  public void setIngressEndPoints(ServiceEndPoints ingressEndPoints) {
    this.ingressEndPoints = ingressEndPoints;
  }

  public Eline egressEndPoints(ServiceEndPoints egressEndPoints) {
    this.egressEndPoints = egressEndPoints;
    return this;
  }

  /**
   * Get egressEndPoints
   *
   * @return egressEndPoints
   */
  @ApiModelProperty(example = "null", value = "")
  public ServiceEndPoints getEgressEndPoints() {
    return egressEndPoints;
  }

  public void setEgressEndPoints(ServiceEndPoints egressEndPoints) {
    this.egressEndPoints = egressEndPoints;
  }

  public Eline sncSwitch(SncSwitch sncSwitch) {
    this.sncSwitch = sncSwitch;
    return this;
  }

  /**
   * Get sncSwitch
   *
   * @return sncSwitch
   */
  @ApiModelProperty(example = "null", value = "")
  public SncSwitch getSncSwitch() {
    return sncSwitch;
  }

  public void setSncSwitch(SncSwitch sncSwitch) {
    this.sncSwitch = sncSwitch;
  }

  public Eline sncPws(SncPws sncPws) {
    this.sncPws = sncPws;
    return this;
  }

  /**
   * Get sncPws
   *
   * @return sncPws
   */
  @ApiModelProperty(example = "null", value = "")
  public SncPws getSncPws() {
    return sncPws;
  }

  public void setSncPws(SncPws sncPws) {
    this.sncPws = sncPws;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Eline eline = (Eline) o;
    return Objects.equals(this.id, eline.id) &&
           Objects.equals(this.name, eline.name) &&
           Objects.equals(this.userLabel, eline.userLabel) &&
           Objects.equals(this.parentNcdId, eline.parentNcdId) &&
           Objects.equals(this.adminStatus, eline.adminStatus) &&
           Objects.equals(this.operateStatus, eline.operateStatus) &&
           Objects.equals(this.sncType, eline.sncType) &&
           Objects.equals(this.interconnectionMode, eline.interconnectionMode) &&
           Objects.equals(this.ingressEndPoints, eline.ingressEndPoints) &&
           Objects.equals(this.egressEndPoints, eline.egressEndPoints) &&
           Objects.equals(this.sncSwitch, eline.sncSwitch) &&
           Objects.equals(this.sncPws, eline.sncPws);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, userLabel, parentNcdId, adminStatus, operateStatus, sncType,
                        interconnectionMode, ingressEndPoints, egressEndPoints, sncSwitch, sncPws);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Eline {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userLabel: ").append(toIndentedString(userLabel)).append("\n");
    sb.append("    parentNcdId: ").append(toIndentedString(parentNcdId)).append("\n");
    sb.append("    adminStatus: ").append(toIndentedString(adminStatus)).append("\n");
    sb.append("    operateStatus: ").append(toIndentedString(operateStatus)).append("\n");
    sb.append("    sncType: ").append(toIndentedString(sncType)).append("\n");
    sb.append("    interconnectionMode: ").append(toIndentedString(interconnectionMode))
        .append("\n");
    sb.append("    ingressEndPoints: ").append(toIndentedString(ingressEndPoints)).append("\n");
    sb.append("    egressEndPoints: ").append(toIndentedString(egressEndPoints)).append("\n");
    sb.append("    sncSwitch: ").append(toIndentedString(sncSwitch)).append("\n");
    sb.append("    sncPws: ").append(toIndentedString(sncPws)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

