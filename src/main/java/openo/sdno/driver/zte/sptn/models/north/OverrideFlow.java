/**
 * L3VpnService Sbi Adapter Interface
 * Orchestrator SDN-O SBI Reference V1.0-L3VPN
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.north;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Override Flow
 */
@ApiModel(description = "Override Flow")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-08-12T11:26:39.981+08:00")
public class OverrideFlow {

  @SerializedName("externalFlowId")
  private String externalFlowId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("car")
  private QosIfCar car = null;

  public OverrideFlow externalFlowId(String externalFlowId) {
    this.externalFlowId = externalFlowId;
    return this;
  }

  /**
   * Flow ID in controller.
   *
   * @return externalFlowId
   */
  @ApiModelProperty(example = "null", required = true, value = "Flow ID in controller.")
  public String getExternalFlowId() {
    return externalFlowId;
  }

  public void setExternalFlowId(String externalFlowId) {
    this.externalFlowId = externalFlowId;
  }

  public OverrideFlow name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Flow name in controller.
   *
   * @return name
   */
  @ApiModelProperty(example = "null", value = "Flow name in controller.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OverrideFlow direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Direction of flow. [0] ingress,[1] egress
   *
   * @return direction
   */
  @ApiModelProperty(example = "null", value = "Direction of flow. [0] ingress,[1] egress")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public OverrideFlow car(QosIfCar car) {
    this.car = car;
    return this;
  }

  /**
   * Get car
   *
   * @return car
   */
  @ApiModelProperty(example = "null", required = true, value = "")
  public QosIfCar getCar() {
    return car;
  }

  public void setCar(QosIfCar car) {
    this.car = car;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OverrideFlow overrideFlow = (OverrideFlow) o;
    return Objects.equals(this.externalFlowId, overrideFlow.externalFlowId) &&
           Objects.equals(this.name, overrideFlow.name) &&
           Objects.equals(this.direction, overrideFlow.direction) &&
           Objects.equals(this.car, overrideFlow.car);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalFlowId, name, direction, car);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OverrideFlow {\n");

    sb.append("    externalFlowId: ").append(toIndentedString(externalFlowId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    car: ").append(toIndentedString(car)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

