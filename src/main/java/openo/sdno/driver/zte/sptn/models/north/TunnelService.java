/**
 * L3VpnService Sbi Adapter Interface
 * Orchestrator SDN-O SBI Reference V1.0-L3VPN
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.north;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Policy configuration of Vpn business tunnel
 */
@ApiModel(description = "Policy configuration of Vpn business tunnel")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-08-12T11:26:39.981+08:00")
public class TunnelService {

  @SerializedName("type")
  private String type = null;

  @SerializedName("autoSelect")
  private AutoSelectPolicy autoSelect = null;

  @SerializedName("mplsTe")
  private MplsTePolicy mplsTe = null;

  @SerializedName("particularConstraints")
  private ParticularConstraints particularConstraints = null;

  public TunnelService type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Type of tunnel policy - (auto-select, mpls-te, vxlan, gre)
   *
   * @return type
   */
  @ApiModelProperty(example = "null", required = true,
                    value = "Type of tunnel policy - (auto-select, mpls-te, vxlan, gre)")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TunnelService autoSelect(AutoSelectPolicy autoSelect) {
    this.autoSelect = autoSelect;
    return this;
  }

  /**
   * Get autoSelect
   *
   * @return autoSelect
   */
  @ApiModelProperty(example = "null", value = "")
  public AutoSelectPolicy getAutoSelect() {
    return autoSelect;
  }

  public void setAutoSelect(AutoSelectPolicy autoSelect) {
    this.autoSelect = autoSelect;
  }

  public TunnelService mplsTe(MplsTePolicy mplsTe) {
    this.mplsTe = mplsTe;
    return this;
  }

  /**
   * Get mplsTe
   *
   * @return mplsTe
   */
  @ApiModelProperty(example = "null", value = "")
  public MplsTePolicy getMplsTe() {
    return mplsTe;
  }

  public void setMplsTe(MplsTePolicy mplsTe) {
    this.mplsTe = mplsTe;
  }

  public TunnelService particularConstraints(ParticularConstraints particularConstraints) {
    this.particularConstraints = particularConstraints;
    return this;
  }

  /**
   * Get particularConstraints
   *
   * @return particularConstraints
   */
  @ApiModelProperty(example = "null", value = "")
  public ParticularConstraints getParticularConstraints() {
    return particularConstraints;
  }

  public void setParticularConstraints(ParticularConstraints particularConstraints) {
    this.particularConstraints = particularConstraints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunnelService tunnelService = (TunnelService) o;
    return Objects.equals(this.type, tunnelService.type) &&
           Objects.equals(this.autoSelect, tunnelService.autoSelect) &&
           Objects.equals(this.mplsTe, tunnelService.mplsTe) &&
           Objects.equals(this.particularConstraints, tunnelService.particularConstraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, autoSelect, mplsTe, particularConstraints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunnelService {\n");

    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    autoSelect: ").append(toIndentedString(autoSelect)).append("\n");
    sb.append("    mplsTe: ").append(toIndentedString(mplsTe)).append("\n");
    sb.append("    particularConstraints: ").append(toIndentedString(particularConstraints)).append(
        "\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

