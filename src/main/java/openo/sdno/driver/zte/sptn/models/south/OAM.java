/**
 * SDN-O SPTN Controller Driver SBI Interface
 * SDN-O SPTN Controller Driver SBI Interface
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.south;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;


/**
 * OAM
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-08-12T10:40:00.335+08:00")
public class OAM {

  @SerializedName("belonged-id")
  private String belongedId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("meg-id")
  private String megId = null;

  @SerializedName("meps")
  private Meps meps = null;

  @SerializedName("cc-allow")
  private Boolean ccAllow = false;

  @SerializedName("cc-exp")
  private Integer ccExp = null;

  /**
   * The interval of CC in ms, including 3.3, 10, 100, 1000
   */
  public enum CcIntervalEnum {
    @SerializedName("3.3")
    NUMBER_3_DOT_3(3.3),

    @SerializedName("10.0")
    NUMBER_10_DOT_0(10.0),

    @SerializedName("100.0")
    NUMBER_100_DOT_0(100.0),

    @SerializedName("1000.0")
    NUMBER_1000_DOT_0(1000.0);

    private Double value;

    CcIntervalEnum(Double value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("cc-interval")
  private CcIntervalEnum ccInterval = CcIntervalEnum.NUMBER_3_DOT_3;

  @SerializedName("lm-mode")
  private Integer lmMode = null;

  @SerializedName("dm-mode")
  private Integer dmMode = null;

  public OAM belongedId(String belongedId) {
    this.belongedId = belongedId;
    return this;
  }

  /**
   * The UUID of OAM related object
   *
   * @return belongedId
   */
  @ApiModelProperty(example = "null", required = true, value = "The UUID of OAM related object")
  public String getBelongedId() {
    return belongedId;
  }

  public void setBelongedId(String belongedId) {
    this.belongedId = belongedId;
  }

  public OAM name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Only used within domain
   *
   * @return name
   */
  @ApiModelProperty(example = "null", value = "Only used within domain")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OAM megId(String megId) {
    this.megId = megId;
    return this;
  }

  /**
   * MEG ID, 1-13 bytes
   *
   * @return megId
   */
  @ApiModelProperty(example = "null", value = "MEG ID, 1-13 bytes")
  public String getMegId() {
    return megId;
  }

  public void setMegId(String megId) {
    this.megId = megId;
  }

  public OAM meps(Meps meps) {
    this.meps = meps;
    return this;
  }

  /**
   * Get meps
   *
   * @return meps
   */
  @ApiModelProperty(example = "null", value = "")
  public Meps getMeps() {
    return meps;
  }

  public void setMeps(Meps meps) {
    this.meps = meps;
  }

  public OAM ccAllow(Boolean ccAllow) {
    this.ccAllow = ccAllow;
    return this;
  }

  /**
   * false(not allowed), true(allowed), default value is false(not allowed)
   *
   * @return ccAllow
   */
  @ApiModelProperty(example = "null",
                    value = "false(not allowed), true(allowed), default value is false(not allowed)")
  public Boolean getCcAllow() {
    return ccAllow;
  }

  public void setCcAllow(Boolean ccAllow) {
    this.ccAllow = ccAllow;
  }

  public OAM ccExp(Integer ccExp) {
    this.ccExp = ccExp;
    return this;
  }

  /**
   * 0(BE), 1(AF1), 2(AF2), 3(AF3), 4(AF4), 5(AF5), 6(CS6), 7(CS7), default value is 7(CS7)
   *
   * @return ccExp
   */
  @ApiModelProperty(example = "null",
                    value = "0(BE), 1(AF1), 2(AF2), 3(AF3), 4(AF4), 5(AF5), 6(CS6), 7(CS7), default value is 7(CS7)")
  public Integer getCcExp() {
    return ccExp;
  }

  public void setCcExp(Integer ccExp) {
    this.ccExp = ccExp;
  }

  public OAM ccInterval(CcIntervalEnum ccInterval) {
    this.ccInterval = ccInterval;
    return this;
  }

  /**
   * The interval of CC in ms, including 3.3, 10, 100, 1000
   *
   * @return ccInterval
   */
  @ApiModelProperty(example = "null",
                    value = "The interval of CC in ms, including 3.3, 10, 100, 1000")
  public CcIntervalEnum getCcInterval() {
    return ccInterval;
  }

  public void setCcInterval(CcIntervalEnum ccInterval) {
    this.ccInterval = ccInterval;
  }

  public OAM lmMode(Integer lmMode) {
    this.lmMode = lmMode;
    return this;
  }

  /**
   * The lm mode, 0(including disable), 1(preactive), 2(on-demand)
   *
   * @return lmMode
   */
  @ApiModelProperty(example = "null",
                    value = "The lm mode, 0(including disable), 1(preactive), 2(on-demand)")
  public Integer getLmMode() {
    return lmMode;
  }

  public void setLmMode(Integer lmMode) {
    this.lmMode = lmMode;
  }

  public OAM dmMode(Integer dmMode) {
    this.dmMode = dmMode;
    return this;
  }

  /**
   * The lm mode, 0(including disable), 1(preactive), 2(on-demand)
   *
   * @return dmMode
   */
  @ApiModelProperty(example = "null",
                    value = "The lm mode, 0(including disable), 1(preactive), 2(on-demand)")
  public Integer getDmMode() {
    return dmMode;
  }

  public void setDmMode(Integer dmMode) {
    this.dmMode = dmMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OAM OAM = (OAM) o;
    return Objects.equals(this.belongedId, OAM.belongedId) &&
           Objects.equals(this.name, OAM.name) &&
           Objects.equals(this.megId, OAM.megId) &&
           Objects.equals(this.meps, OAM.meps) &&
           Objects.equals(this.ccAllow, OAM.ccAllow) &&
           Objects.equals(this.ccExp, OAM.ccExp) &&
           Objects.equals(this.ccInterval, OAM.ccInterval) &&
           Objects.equals(this.lmMode, OAM.lmMode) &&
           Objects.equals(this.dmMode, OAM.dmMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(belongedId, name, megId, meps, ccAllow, ccExp, ccInterval, lmMode, dmMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAM {\n");

    sb.append("    belongedId: ").append(toIndentedString(belongedId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    megId: ").append(toIndentedString(megId)).append("\n");
    sb.append("    meps: ").append(toIndentedString(meps)).append("\n");
    sb.append("    ccAllow: ").append(toIndentedString(ccAllow)).append("\n");
    sb.append("    ccExp: ").append(toIndentedString(ccExp)).append("\n");
    sb.append("    ccInterval: ").append(toIndentedString(ccInterval)).append("\n");
    sb.append("    lmMode: ").append(toIndentedString(lmMode)).append("\n");
    sb.append("    dmMode: ").append(toIndentedString(dmMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

