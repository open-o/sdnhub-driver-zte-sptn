/**
 * L2VpnService Sbi Adapter Interface
 * Orchestrator SDN-O SBI Reference V1.0-L2VPN
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package openo.sdno.driver.zte.sptn.models.north;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;


/**
 * L2Vpn
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen",
                            date = "2016-07-27T16:44:16.967+08:00")
public class L2Vpn {

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("tenantId")
  private String tenantId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("topology")
  private String topology = null;

  @SerializedName("adminStatus")
  private String adminStatus = null;

  @SerializedName("operStatus")
  private String operStatus = null;

  @SerializedName("tunnelService")
  private TunnelService tunnelService = null;

  @SerializedName("mtu")
  private Integer mtu = null;

  @SerializedName("acs")
  private L2Acs acs = null;

  @SerializedName("CtrlWordType")
  private String ctrlWordType = null;

  @SerializedName("Pws")
  private Pws pws = null;

  @SerializedName("SignalType")
  private String signalType = null;

  @SerializedName("EncapsulationType")
  private String encapsulationType = null;

  public L2Vpn id(String id) {
    this.id = id;
    return this;
  }

  /**
   * L2Vpn Connection UUID
   *
   * @return id
   */
  @ApiModelProperty(example = "null", required = true, value = "L2Vpn Connection UUID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public L2Vpn name(String name) {
    this.name = name;
    return this;
  }

  /**
   * L2Vpn Connection name
   *
   * @return name
   */
  @ApiModelProperty(example = "null", required = true, value = "L2Vpn Connection name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public L2Vpn tenantId(String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * tenant UUID
   *
   * @return tenantId
   */
  @ApiModelProperty(example = "null", value = "tenant UUID")
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(String tenantId) {
    this.tenantId = tenantId;
  }

  public L2Vpn description(String description) {
    this.description = description;
    return this;
  }

  /**
   * description of L2Vpn Connction
   *
   * @return description
   */
  @ApiModelProperty(example = "null", value = "description of L2Vpn Connction")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public L2Vpn topology(String topology) {
    this.topology = topology;
    return this;
  }

  /**
   * This identify the connection mode of vpns, including none, hub-spoke and full-mesh
   *
   * @return topology
   */
  @ApiModelProperty(example = "null",
                    value = "This identify the connection mode of vpns, including none, hub-spoke and full-mesh")
  public String getTopology() {
    return topology;
  }

  public void setTopology(String topology) {
    this.topology = topology;
  }

  public L2Vpn adminStatus(String adminStatus) {
    this.adminStatus = adminStatus;
    return this;
  }

  /**
   * L2VPN Connection  management status, including adminUp and adminDown
   *
   * @return adminStatus
   */
  @ApiModelProperty(example = "null",
                    value = "L2VPN Connection  management status, including adminUp and adminDown")
  public String getAdminStatus() {
    return adminStatus;
  }

  public void setAdminStatus(String adminStatus) {
    this.adminStatus = adminStatus;
  }

  public L2Vpn operStatus(String operStatus) {
    this.operStatus = operStatus;
    return this;
  }

  /**
   * The running status of connection in controller, the adapter need fill this parameter, including
   * operateUp and operateDown
   *
   * @return operStatus
   */
  @ApiModelProperty(example = "null",
                    value = "The running status of connection in controller, the adapter need fill this parameter, including operateUp and operateDown")
  public String getOperStatus() {
    return operStatus;
  }

  public void setOperStatus(String operStatus) {
    this.operStatus = operStatus;
  }

  public L2Vpn tunnelService(TunnelService tunnelService) {
    this.tunnelService = tunnelService;
    return this;
  }

  /**
   * Get tunnelService
   *
   * @return tunnelService
   */
  @ApiModelProperty(example = "null", value = "")
  public TunnelService getTunnelService() {
    return tunnelService;
  }

  public void setTunnelService(TunnelService tunnelService) {
    this.tunnelService = tunnelService;
  }

  public L2Vpn mtu(Integer mtu) {
    this.mtu = mtu;
    return this;
  }

  /**
   * Mtu of L2Vpn business, range from 46 to 9600
   *
   * @return mtu
   */
  @ApiModelProperty(example = "null", value = "Mtu of L2Vpn business, range from 46 to 9600")
  public Integer getMtu() {
    return mtu;
  }

  public void setMtu(Integer mtu) {
    this.mtu = mtu;
  }

  public L2Vpn acs(L2Acs acs) {
    this.acs = acs;
    return this;
  }

  /**
   * Get acs
   *
   * @return acs
   */
  @ApiModelProperty(example = "null", value = "")
  public L2Acs getAcs() {
    return acs;
  }

  public void setAcs(L2Acs acs) {
    this.acs = acs;
  }

  public L2Vpn ctrlWordType(String ctrlWordType) {
    this.ctrlWordType = ctrlWordType;
    return this;
  }

  /**
   * Control Word type, including disable and enable
   *
   * @return ctrlWordType
   */
  @ApiModelProperty(example = "null", value = "Control Word type, including disable and enable")
  public String getCtrlWordType() {
    return ctrlWordType;
  }

  public void setCtrlWordType(String ctrlWordType) {
    this.ctrlWordType = ctrlWordType;
  }

  public L2Vpn pws(Pws pws) {
    this.pws = pws;
    return this;
  }

  /**
   * Get pws
   *
   * @return pws
   */
  @ApiModelProperty(example = "null", value = "")
  public Pws getPws() {
    return pws;
  }

  public void setPws(Pws pws) {
    this.pws = pws;
  }

  public L2Vpn signalType(String signalType) {
    this.signalType = signalType;
    return this;
  }

  /**
   * Singaling Type of L2Vpn, including static,ldp,ldp and sr-te
   *
   * @return signalType
   */
  @ApiModelProperty(example = "null",
                    value = "Singaling Type of L2Vpn, including static,ldp,ldp and sr-te")
  public String getSignalType() {
    return signalType;
  }

  public void setSignalType(String signalType) {
    this.signalType = signalType;
  }

  public L2Vpn encapsulationType(String encapsulationType) {
    this.encapsulationType = encapsulationType;
    return this;
  }

  /**
   * Encapsulation Type of L2Vpn, including eth and vlan
   *
   * @return encapsulationType
   */
  @ApiModelProperty(example = "null", value = "Encapsulation Type of L2Vpn, including eth and vlan")
  public String getEncapsulationType() {
    return encapsulationType;
  }

  public void setEncapsulationType(String encapsulationType) {
    this.encapsulationType = encapsulationType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    L2Vpn l2Vpn = (L2Vpn) o;
    return Objects.equals(this.id, l2Vpn.id) &&
           Objects.equals(this.name, l2Vpn.name) &&
           Objects.equals(this.tenantId, l2Vpn.tenantId) &&
           Objects.equals(this.description, l2Vpn.description) &&
           Objects.equals(this.topology, l2Vpn.topology) &&
           Objects.equals(this.adminStatus, l2Vpn.adminStatus) &&
           Objects.equals(this.operStatus, l2Vpn.operStatus) &&
           Objects.equals(this.tunnelService, l2Vpn.tunnelService) &&
           Objects.equals(this.mtu, l2Vpn.mtu) &&
           Objects.equals(this.acs, l2Vpn.acs) &&
           Objects.equals(this.ctrlWordType, l2Vpn.ctrlWordType) &&
           Objects.equals(this.pws, l2Vpn.pws) &&
           Objects.equals(this.signalType, l2Vpn.signalType) &&
           Objects.equals(this.encapsulationType, l2Vpn.encapsulationType);
  }

  @Override
  public int hashCode() {
    return Objects
        .hash(id, name, tenantId, description, topology, adminStatus, operStatus, tunnelService,
              mtu, acs, ctrlWordType, pws, signalType, encapsulationType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class L2Vpn {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    topology: ").append(toIndentedString(topology)).append("\n");
    sb.append("    adminStatus: ").append(toIndentedString(adminStatus)).append("\n");
    sb.append("    operStatus: ").append(toIndentedString(operStatus)).append("\n");
    sb.append("    tunnelService: ").append(toIndentedString(tunnelService)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    acs: ").append(toIndentedString(acs)).append("\n");
    sb.append("    ctrlWordType: ").append(toIndentedString(ctrlWordType)).append("\n");
    sb.append("    pws: ").append(toIndentedString(pws)).append("\n");
    sb.append("    signalType: ").append(toIndentedString(signalType)).append("\n");
    sb.append("    encapsulationType: ").append(toIndentedString(encapsulationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first
   * line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

