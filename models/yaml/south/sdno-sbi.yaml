#
# Copyright 2016 ZTE, Inc. and others.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
swagger: '2.0'
info:
  version: '0.1.0'
  title: SDN-O SPTN Controller Driver SBI Interface
  description: SDN-O SPTN Controller Driver SBI Interface
host: sdno.openo.org
basePath: /rest
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /sptndriver/v1/sbi-elines:service/eline:
    post:
      summary: Create Eline Connection
      description: Creates a Eline Connection instance
      produces:
        - application/json
      parameters:
        - name: eline
          in: body
          description: Eline Connection
          required: true
          schema:
            $ref: '#/definitions/ElineSncAndRoute'
      responses:
        '200':
          description: Create a Eline connection
  /restconf/operations/sptn-service-eline:create-snc-eline-tunnels:
    post:
      summary: Create Eline and Tunnels
      description: Creates a Eline Connection instance and Corresponding Tunnels
      produces:
        - application/json
      parameters:
        - name: create-snc-eline-tunnels
          in: body
          description: Eline Connection
          required: true
          schema:
            $ref: '#/definitions/CreateElineAndTunnelsInput'
      responses:
        '200':
          description: NCD ID to Eline ID map
          schema:
            $ref: '#/definitions/CmdResultAndNcdResRelationsOutput'
  /restconf/operations/sptn-service-eline:delete-snc-eline:
      post:
        summary: Delete a Eline Connection
        description: Delete a Eline Connection, need to pass in Eline id
        produces:
         - application/json
        parameters:
          - name: eline-id
            in: body
            description: Eline Connection uuid
            required: true
            schema:
              $ref: '#/definitions/DeleteElineInput'
        responses:
          '204':
            description: Delete a Eline connection
  /restconf/data/sptn-service-eline:service/snc-elines/snc-eline={id}:
      get:
        summary: Query a Eline Connection
        description: Query a Eline Connection, need to pass in Eline id
        produces:
          - application/json
        parameters:
          - name: id
            in: path
            description: Eline Connection uuid
            required: true
            type: string
        responses:
          '200':
            description: Query a Eline connection
            schema:
              $ref: '#/definitions/Eline'
  /sptndriver/v1/sbi-l3vpns:service/l3vpn:
    post:
      summary: Create L3vpn Connection
      description: Creates a L3vpn Connection instance and relating tunnels
      produces:
        - application/json
      parameters:
        - name: snc-l3vpn
          in: body
          description: L3vpn Connection
          required: true
          schema:
            $ref: '#/definitions/L3vpn'
      responses:
        '200':
          description: Create a L3vpn connection
  /restconf/operations/sptn-service-route:request-routes:
    post:
      summary: Calculate route of tunnel
      description: Calculate route of tunnel
      produces:
       - application/json
      parameters:
        - name: request-routes
          in: body
          description: Calculate routes request
          required: true
          schema:
            $ref: '#/definitions/RouteCalReqsInput'
      responses:
        '200':
         description: Calculate routes request
         schema:
           $ref: '#/definitions/RouteCalResultsOutput'
definitions:
  CreateElineAndTunnelsInput:
   type: object
   properties:
     input:
      $ref: '#/definitions/CreateElineAndTunnels'
  CreateElineAndTunnels:
   type: object
   required:
    - snc-eline
    - snc-tunnel-create-policy
   properties:
    snc-eline:
     $ref: '#/definitions/Eline'
    route-cal-results:
     $ref: '#/definitions/RouteCalResult'
    snc-tunnel-create-policy:
     $ref: '#/definitions/SncTunnelCreatePolicy'
  ElineSncAndRoute:
   type: object
   properties:
    snc-eline:
     $ref: '#/definitions/Eline'
    routes:
     $ref: '#/definitions/SncRoute'
  Eline:
   type: object
   required:
     - id
     - user-label
   properties:
      id:
        type: string
        description: Eline Connection UUID
        format: string
      name:
        type: string
        description: Eline Connection name(Only used within domain)
        format: string
      user-label:
        type: string
        description: Eline Connection userlabel
        format: string
      parent-ncd-id:
        type: string
        description: ID of parent NCD
        format: string
      admin-status:
        $ref: '#/definitions/AdminStatus'
      operate-status:
        $ref: '#/definitions/OperateStatus'
      snc-type:
        $ref: '#/definitions/SncType'
      interconnection-mode:
       type: string
       description: Mode of inter-connection between sub-domains.
       enum: ["nni-nni","uni-uni"]
       format: string
      ingress-end-points:
       $ref: '#/definitions/IngressEps'
      egress-end-points:
       $ref: '#/definitions/EgressEps'
      snc-switch:
       $ref: '#/definitions/SncSwitch'
      snc-pws:
       $ref: '#/definitions/SncPws'
  IngressEps:
    type: object
    properties:
     ingress-end-point:
      $ref: '#/definitions/ServiceEndPoint'
  EgressEps:
    type: object
    properties:
     egress-end-point:
      $ref: '#/definitions/ServiceEndPoint'
  ServiceEndPoint:
   type: object
   description: The service end points(EP)
   required:
    - id
    - ne-id
    - ltp-id
   properties:
    id:
      type: string
      description: EP UUID
      format: string
    ne-id:
      type: string
      description: NE UUID
      format: string
    ltp-id:
      type: string
      description: Logical terminal point UUID
      format: string
    access-type:
     type: string
     description: The access type
     enum: ["Port","Dot1Q","QinQ"]
     format: string
    dot1q-vlan-bitmap:
     type: string
     description: The vlan bitmap of Dot1Q, range from 1 to 4094
     minimum: 1
     maximum: 4094
     format: int16
    qinq-svlan-bitmap:
     type: string
     description: the svlan bitmap of QinQ, range from 1 to 4094
     minimum: 1
     maximum: 4094
     format: int16
    qinq-cvlan-bitmap:
     type: string
     description: the cvlan bitmap of QinQ, range from 1 to 4094
     minimum: 1
     maximum: 4094
     format: int16
    access-action:
     type: string
     description: The access action type
     enum: ["Keep","Push","Pop","Swap"]
     format: string
    action-vlan-id:
     type: string
     description: The action vlan id, range from 1 to 4094
     minimum: 1
     maximum: 4094
     format: int16
    role:
     type: string
     description: The role of EP, including 0(master), 1(slave)
     enum: ["master","slave"]
    oam:
      $ref: '#/definitions/Oam'
    qos:
      $ref: '#/definitions/Qos'
  SncSwitch:
   type: object
   required:
    - snc-id
    - layer-rate
    - linear-protection-type
   properties:
    snc-id:
     type: string
     description: UUID of tunnel or UUID of Eline
     format: string
    layer-rate:
     type: string
     description: Rate of the connection
     enum: ["LSP","PW"]
     format: string
    linear-protection-type:
     type: string
     description: Linear protection type, default value is unprotected
     enum: ["unprotected","path-protection-1-to-1","path-protection-1-plus-1","unprotected-with-recovery","with-recovery-1-to-1","with-recovery-1-plus-1","permanent-1-plus-1-protection"]
     format: string
    linear-protection-protocol:
     type: string
     description: Linear protection protocol, including 0(APS), 1(PSC)
     enum: ["APS","PSC"]
     format: string
    switch-mode:
     type: string
     description: Switch mode, including 0(single-ended-switch), 1(double-end-switch)
     enum: ["single-ended-switch","double-end-switch"]
     format: string
    revertive-mode:
     type: string
     description: Revertive mode, including 0(no-revertive), 1(revertive)
     enum: ["no-revertive","revertive"]
     format: string
    wtr:
     type: string
     description: The wait time in seconds, default value is 300 s, minimum value is 0 s
     format: int32
    hold-off-time:
     type: string
     description: The hode off time in ms, range from 0 ms to 10000 ms, default value is 0 ms
     format: int32
    #reroute-revertive-mode:
     #type: integer
     #description: Reroute revertive mode, including 0(no-revertive), 1(revertive)
     #default: 0
     #format: int32
    #reroute-wtr:
     #type: integer
     #description: wait time for reroute in seconds
     #default: 50
     #format: int32
  Meps:
   type: array
   description: MEPs of MEG, assigned by controller
   items:
    $ref: '#/definitions/Mep'
  Mep:
   type: object
   required:
   - id
   properties:
    name:
     type: string
     description: Assigned by EMS
     format: string
    id:
     type: string
     format: int32
  Qos:
   type: object
   required:
    - belonged-id
   properties:
    belonged-id:
     type: string
     description: The UUID of QOS related object
     format: string
    tunnel-mode:
     type: string
     description: The tunnel mode, default value is pipeline
     enum: ["pipeline","short-pipeline","unified-pattern"]
     format: string
    cac-mode:
     type: string
     description: Whether CAC is enabled, including 0(disabled), 1(enable), default value is 0(disabled)
     format: int16
    convg-mode:
     type: string
     description: Whether the tunnel inherits the convege rate of TMS, including 0(not convergence), 1(use TMS convergence rate), default value is 0(not convergence)
     format: int16
    traffic-adj-mode:
     type: string
     description: Whether the traffic parameters(like Cir, Pir) of the tunnel can be automatically changed with the change of client service, including 0(not support auto-adjust), 1(support auto-adjust), default value is 0(not support auto-adjust)
     format: int16
    a2z-policing:
     type: string
     description: Whether a2z policing is enabled, including 0(disabled), 1(enabled), default value is 0(disabled)
     format: int16
    z2a-policing:
     type: string
     description: Whether z2a policing is enabled, including 0(disabled), 1(enabled), default value is 0(disabled)
     format: int16
    a2z-cir:
     type: string
     description: The a2z committed speed in kbps
     format: int32
    z2a-cir:
     type: string
     description: The z2a committed speed in kbps
     format: int32
    a2z-pir:
     type: string
     description: The a2z peak speed in kbps
     format: int32
    z2a-pir:
     type: string
     description: The z2a peak speed in kbps
     format: int32
    a2z-cbs:
     type: string
     description: The a2z committed burst Size in kbytes
     format: int32
    z2a-cbs:
     type: string
     description: The z2a committed burst Size in kbytes
     format: int32
    a2z-pbs:
     type: string
     description: The a2z peak burst Size in kbytes
     format: int32
    z2a-pbs:
     type: string
     description: The z2a peak burst Size in kbytes
     format: int32
    a2z-color-mode:
      type: string
      description: The a2z color mode, including 0(blind), 1(aware)
      format: int16
    z2a-color-mode:
      type: string
      description: The z2a color mode, including 0(blind), 1(aware)
      format: int16
    traffic-class:
     $ref: '#/definitions/TrafficClass'
  TrafficClass:
   type: string
   format: string
   enum: ["BE", "AF1", "AF2", "AF3", "AF4", "AF5", "CS6", "CS7"]
  Oam:
   type: object
   required:
    - belonged-id
   properties:
    belonged-id:
     type: string
     description: The UUID of OAM related object
     format: string
    name:
     type: string
     description: Only used within domain
     format: string
    meg-id:
     type: string
     description: MEG ID, 1-13 bytes
     maxLength: 13
     format: int32
    meps:
     $ref: '#/definitions/Meps'
    cc-allow:
     type: boolean
     description: false(not allowed), true(allowed), default value is false(not allowed)
     default: false
    cc-exp:
      $ref: '#/definitions/TrafficClass'
    cc-interval:
     type: number
     description: The interval of CC in ms, including 3.3, 10, 100, 1000, default value is 3.3 ms
     format: double
     enum: [3.3, 10, 100, 1000]
    lm-mode:
     $ref: '#/definitions/OamMode'
    dm-mode:
     $ref: '#/definitions/OamMode'
  OamMode:
   type: string
   format: string
   enum: ["disable","preactive","on-demand"]
  SncPws:
   type: object
   properties:
    snc-pw:
     $ref: '#/definitions/SncPw'
  SncPw:
   type: object
   required:
    - id
   properties:
    id:
      type: string
      description: The PW UUID
      format: string
    name:
      type: string
      description: Only used within domain
      format: string
    user-label:
      type: string
      description: User label of PW
      format: string
    role:
      type: string
      description: The role of PW, including 0(master), 1(slave), 2(DNI-PW)
      enum: ["master","slave","DNI-PW"]
      format: string
    encaplate-type:
      $ref: '#/definitions/EncapsulateType'
    ingress-ne-id:
      type: string
      description: UUID of source NE
      format: string
    egress-ne-id:
      type: string
      description: UUID of destination NE
      format: string
    source-ip:
      type: string
      description: source NE IP address
      format: string
    destination-ip:
      type: string
      description: destination NE IP address
      format: string
    tunnel-ids:
      $ref: '#/definitions/TunnelIds'
    admin-status:
      $ref: '#/definitions/AdminStatus'
    operate-status:
      $ref: '#/definitions/OperateStatus'
    ctrl-word-support:
     type: string
     description: The control word type, including 0(Not support), 1(support)
     default: "0"
     format: int16
    sn-support:
     type: string
     description: 0(Not support), 1(support)
     default: "0"
     format: int16
    vccv-type:
     type: string
     description: 0(not support VCCV), 1(inbound), 2(outbound), 3(based on TTL), 4(inbound + outbound), 5(inbound +based on TTL), 6(outbound + based on TTL), 7(inbound + outbound + based onTTL)
     default: "0"
     format: int16
    conn-ack-type:
     type: string
     description: 0(None), 1(lsp-ping), 2(lsp-ping+icmp-ping), 3(lsp-ping+bfd-pwach-fs), 4(lsp-ping+bfd-pwach-fo), 5(lsp-ping+bfd-pwach-fs+ bfd-pwach-fo), 6(lsp-ping+icmp-ping+bfd-pwach-fs), 7(lsp-ping+icmp-ping+bfd-pwach-fo), 8(lsp-ping+icmp-ping+bfd-pwach-fs+ bfd-pwach-fo), 9(lsp-ping+bfd-ipudp-fs), 10(lsp-ping+bfd-ipudp-fo), 11(lsp-ping+bfd-ipudp-fs+bfd-ipudp-fo), 12(lsp-ping+icmp-ping +bfd-ipudp-fs), 13(lsp-ping+icmp-ping +bfd-ipudp-fo), 14(lsp-ping+icmp-ping +bfd-ipudp-fs+bfd-ipudp-fo), 15(CCM)
     default: "0"
     format: int16
    oam:
     $ref: '#/definitions/Oam'
    qos:
     $ref: '#/definitions/Qos'
  EncapsulateType:
   type: string
   format: string
   description: The encapsulate type
   enum: ["ethernet-vlan","ethernet"]
  TunnelIds:
   type: object
   description: Tunnel UUID
   properties:
    tunnel-ids:
     type: string
     format: string
  DeleteElineInput:
   type: object
   description: Input structure of delete Eline
   properties:
    input:
       $ref: '#/definitions/DeleteEline'
  DeleteEline:
   type: object
   description: Struct for delete Eline
   properties:
    eline-id:
     type: string
     description: Eline UUID
     format: string
  SncRoute:
   type: object
   description: The route of service
   required:
    - id
    - snc-id
   properties:
    id:
     type: string
     description: UUID of route
     format: string
    name:
     type: string
     description: Only used within domain, for driver, it is empty
     format: string
    layer-rate:
     type: string
     description: Layer rate, 0(LSP) or 1(PW)
     enum: ["LSP","PW"]
     format: string
    snc-id:
     type: string
     description: UUID of service related to the route, LSP ID or PW ID
     format: string
    xcs:
      $ref: '#/definitions/Xcs'
  Xcs:
   type: object
   properties:
    xc-list:
      type: array
      items:
        $ref: '#/definitions/Xc'
  Xc:
   type: object
   description: Node on the route
   required:
    - ne-id
   properties:
    ne-id:
     type: string
     description: UUID of NE
     format: string
    ingress-ltp-id:
     type: string
     description: UUID of XC's ingress port. For LSP, it is PTP or FTP; For destination node of PW, it is empty
     format: string
    forward-in-label:
     type: string
     description: Inlabel of ingress port, for driver it is 0, controller will fill this field, range from 16 to 1048575
     format: int32
    backward-out-label:
     type: string
     description: Outlabel of ingress port, for driver it is 0, controller will fill this field, range from 16 to 1048575
     format: int32
    backward-peer-id:
     type: string
     description: For LSP, it is the IP address of ingress port's peer port; For PW, it is VC ID of ingress port's peer port
     format: string
    egress-ltp-id:
     type: string
     description: UUID of XC's egress port. For LSP, it is PTP or FTP; For source node of PW, it is empty
     format: string
    forward-out-label:
     type: string
     description: Outlabel of egress port, for driver it is 0, controller will fill this field, range from 16 to 1048575
     format: int32
    backward-in-label:
     type: string
     description: Inlabel of egress port, for driver it is 0, controller will fill this field, range from 16 to 1048575
     format: int32
    forward-peer-id:
     type: string
     description: For LSP, it is the IP address of egress port's peer port; For PW, it is VC ID of egress port's peer port
     format: string
  SncTunnelCreatePolicy:
   type: object
   description: Policy of create tunnels
   required:
    - user-label
   properties:
    name:
     type: string
     description: Only used within domain, for driver, it is empty
     format: string
    user-label:
     type: string
     description: User label of tunnel
     format: string
    tenant-Id:
     type: string
     description: Tenant ID
     format: string
    creater:
     type: string
     description: APP ID
     format: string
    parent-ncd-id:
     type: string
     description: Only used within domain, for driver, it is empty
     format: string
    direction:
     type: string
     description: Direction of tunnel, including 0(unidirection), 1(bidirection)
     format: string
     enum: ["bidirection","unidirection"]
    type:
     type: string
     description: Type of tunnel, including 1(linear), 2(ring)
     default: "1"
     format: int16
    #is-shared:
     #type: boolean
     #description: Whether PW share tunnel
     #default: false
    qos:
     $ref: '#/definitions/Qos'
    snc-switch:
     $ref: '#/definitions/SncSwitch'
    admin-status:
     $ref: '#/definitions/AdminStatus'
    lsp-oam:
     $ref: '#/definitions/Oam'
  RouteCalResultsOutput:
   type: object
   properties:
    output:
      $ref: '#/definitions/RouteCalResults'
  RouteCalResults:
   type: object
   properties:
    route-cal-results:
      $ref: '#/definitions/RouteCalResult'
  RouteCalResult:
   type: object
   properties:
     route-cal-result:
      type: array
      items:
        $ref: '#/definitions/RouteCalResultContainer'

  RouteCalResultContainer:
   type: object
   properties:
    route-cal-result-container:
     $ref: '#/definitions/RouteCalResultElement'
    xcs:
     $ref: '#/definitions/Xcs'
  RouteCalResultElement:
   type: object
   description: Tunnel route calculate result
   required:
    - sequence-no
    - group-no
   properties:
    sequence-no:
     type: string
     description: Sequence number
     format: string
     default: "1"
    group-no:
     type: string
     description: Group number of tunnel
     format: string
    role:
     type: string
     description: Role of tunnel.
     format: string
     enum: ["master","slave","restore","master-restore","slave-restore"]
    ingress-ne-id:
     type: string
     description: Source NE UUID
     format: string
    egress-ne-id:
     type: string
     description: Destination NE UUID
     format: string
    latency:
     type: string
     description: Latency of tunnel in us, range from 0 to 60000000
     format: int32
    max-availble-bandwidth:
     type: string
     description: The minimum max available bandwidth of all links bearing the tunnel in kps, range from 0 to 4000000000
     minimum: 0
     maximum: 4000000000
     format: int64
  L3vpn:
   type: object
   properties:
    id:
     type: string
     description: L3vpn UUID
     format: string
    name:
     type: string
     description: Only used withen domain
     format: string
    user-label:
     type: string
     description: User Label of L3vpn
     format: string
    parent-ncd-id:
     type: string
     description: UUID of parent ncd, is empty for driver
     format: string
    admin-status:
      $ref: '#/definitions/AdminStatus'
    operate-status:
      $ref: '#/definitions/OperateStatus'
    ac-list:
     type: array
     items:
      $ref: '#/definitions/L3ac'
    topo-mode:
     type: string
     format: string
     description: The mode how to connection PEs with tunnel
     enum: ["specified","any-to-any","hub-spoke"]
    hub-spoke-policy:
     $ref: '#/definitions/HubSpokePolicy'
    bind-relation-list:
     type: array
     items:
      $ref: '#/definitions/L3BindRelation'
    tunnel-create-policy:
     $ref: '#/definitions/SncTunnelCreatePolicy'
    l3-frr-list:
     type: array
     items:
      $ref: '#/definitions/L3Frr'
    static-route-list:
     type: array
     items:
      $ref: '#/definitions/StaticRoute'
    traffic-class:
      $ref: '#/definitions/TrafficClass'
  L3ac:
   type: object
   properties:
    id:
     type: string
     description: L3vpn AC UUID
     format: string
    ne-id:
      type: string
      description: NE UUID
      format: string
    ltp-id:
     type: string
     description: LTP UUID
     format: string
    ip-addr:
     type: string
     description: New private IP address of LTP after  added to L3vpn
     format: string
    qos:
      $ref: '#/definitions/Qos'
    protocol-list:
     type: array
     items:
      $ref: '#/definitions/L3acProtocol'
  L3BindRelation:
   type: object
   properties:
    id:
      type: string
      format: string
    source-peer:
     type: string
     description: Peer IP address of souce end
     format: string
    dest-peer:
     type: string
     description: Peer IP address of destination end
     format: string
    source-id:
     type: string
     description: UUID of source NE
     format: string
    dest-id:
     type: string
     description: UUID of destination NE
     format: string
    snc-tunnel-create-policy:
     $ref: '#/definitions/SncTunnelCreatePolicy'
  StaticRoute:
   type: object
   properties:
    id:
     type: string
    dest-ip:
     type: string
     description: Destination IP address, like "10.1.1.1"
     format: string
    dest-mask:
     type: string
     description: destination IP mask, like "255.255.0.0"
     format: string
    route-type:
     type: string
     description: Static Route type, including direct-route(same ip prefix as out-inf), local-route(the route to reach some ce), nni-route(the route to reach some pe in this l3vpn)
     enum: ["direct-route","local-route","nni-route"]
     format: string
    next-hop-ip:
     type: string
     description: Next hop IP address, like "10.1.1.1"
     format: string
    out-inf:
     type: string
     description: out interface(LTP) UUID
     format: string
    route-weight:
     type: string
     description: Route weight, range from 0 to 255
     minimum: 0
     maximum: 255
     format: int16
    routeStatus:
     type: string
     description: Route Status, including 1(down), 2(up), only used when querying a route
     enum: ["down","up"]
     format: string
  CommandResultOutput:
   type: object
   description: Output structure containing CommandResult
   properties:
    output:
      $ref: '#/definitions/CommandResult'
  CommandResult:
   type: object
   description: Command execution result
   properties:
     result:
      type: string
      description: Inluding 1(success), 2(failed), 3(partly failed)
      format: int8
     success-resources:
      type: array
      items:
       $ref: '#/definitions/SuccessResource'
     failed-resources:
      $ref: '#/definitions/FailedResource'
  SuccessResource:
   type: string
   format: string
  FailedResource:
   type: object
   properties:
    resouce-id:
     type: string
     format: string
    error-code:
     type: string
     format: string
    error-message:
     type: string
     format: string
  RouteCalReqsInput:
   type: object
   properties:
    input:
      $ref: '#/definitions/RouteCalReqs'
  RouteCalReqs:
   type: object
   properties:
     route-cal-reqs:
        $ref: '#/definitions/RouteCalReq'
  RouteCalReq:
   type: object
   properties:
    route-cal-req:
     type: array
     items:
          $ref: '#/definitions/RouteCalReqContainer'
  RouteCalReqContainer:
   type: object
   properties:
     route-cal-req-container:
       $ref: '#/definitions/RouteCalReqElement'
  RouteCalReqElement:
   type: object
   properties:
    sequence-no:
     type: string
     format: string
     description: Sequence number
    calculate-policy:
     type: string
     format: string
     description: Calculate policy, local-protection is used for uni-uni mode.
     enum: ["master","master-and-slave","local-protection"]
    calculate-type:
     type: string
     format: string
     description: Calculate type.
     enum: ["strict-separate","besteffort-separate"]
    calculate-mode:
     type: string
     format: string
     description: Calculate mode, including simple(one-one), add-drop(one-two), (double-drop)two-two
     enum: ["simple","add-drop","double-drop"]
    calculate-interconnection-mode:
     type: string
     format: string
     description: Calculate interconnection mode.
     enum: ["nni-nni","uni-uni"]
    layer-rate:
     type: string
     format: string
     description: Layer rate.
     enum: ["lsp","pw"]
    left-ne-ids:
     type: object
     properties:
      left-ne-id:
       type: array
       items:
         $ref: '#/definitions/NeId'
    right-ne-ids:
     type: object
     properties:
       right-ne-id:
         type: array
         items:
          $ref: '#/definitions/NeId'
    work-calculate-constraint:
      $ref: '#/definitions/CalculateConstraint'
    protect-calculate-constraint:
      $ref: '#/definitions/CalculateConstraint'
  CalculateConstraint:
   type: object
   properties:
    bandwidth:
     type: string
     format: string
     description: Requested bandwidth in kbps
    cal-policy:
     type: string
     format: string
     description: Route calculation policy.
     enum: ["min-hop","bandwidth-balancing","min-latency"]
    ne-link-constraint:
     $ref: '#/definitions/NeLinkConstraints'
  NeLinkConstraints:
   type: object
   properties:
    explicit-include-ne:
     type: array
     items:
      $ref: '#/definitions/NeId'
    explicit-include-link:
     type: array
     items:
      $ref: '#/definitions/LinkId'
    explicit-exclude-ne:
     type: array
     items:
      $ref: '#/definitions/NeId'
    explicit-exclude-link:
     type: array
     items:
       $ref: '#/definitions/LinkId'
  NeId:
   type: object
   properties:
    ne-id:
     type: string
     format: string
  LinkId:
   type: object
   properties:
    link-id:
     type: string
     format: string
  AdminStatus:
   type: string
   format: string
   description: Management status
   enum: ["admin-up","admin-down"]
  OperateStatus:
   type: string
   format: string
   enum: ["operate-up","operate-down"]
  SncType:
   type: string
   format: string
   enum: ["simple","add-drop-a","add-drop-z","double-add-drop","inter-connect","double-inter-connect","open-add-drop","explicit","local-protection"]
  CmdResultAndNcdResRelationsOutput:
    type: object
    properties:
     output:
      $ref: '#/definitions/CmdResultAndNcdResRelations'
  CmdResultAndNcdResRelations:
    type: object
    properties:
      command-result:
        $ref: '#/definitions/CommandResult'
      ncd-resource-relations:
        $ref: '#/definitions/NcdResourceRelations'
  NcdResourceRelations:
    type: object
    properties:
      ncd-resource-relation:
       type: array
       items:
        $ref: '#/definitions/NcdResourceRelation'
  NcdResourceRelation:
    type: object
    properties:
      ncd-id:
       type: string
      resource-id:
       type: string
  HubSpokePolicy:
   type: object
   description: Specify role of every PE and their relations
   properties:
     node-list:
      $ref: '#/definitions/HubSpokeNodes'
     hub-fullmeshed:
      type: boolean
     primary-backup-connected:
      type: boolean
  HubSpokeNodes:
   type: array
   items:
     $ref: '#/definitions/HubSpokeNode'
  HubSpokeNode:
   type: object
   properties:
    ne-id:
     type: string
    node-role:
     type: string
     enum: ["hub","spoke"]
    belonged-hubs:
     type: array
     items:
      $ref: '#/definitions/NodeId'
  NodeId:
   type: object
   properties:
    node-id:
     type: string
  L3Frr:
   type: object
   properties:
    id:
      type: string
    source-node-id:
      type: string
    primary-node-id:
      type: string
    primary-peer-ip:
      type: string
    backup-node-id:
      type: string
    backup-peer-ip:
      type: string
    revertive-mode:
      type: string
      enum: ["no-revertive", "revertive"]
    wtr:
      type: string
      format: int32
      description: The wait time in seconds, default value is 300 s, minimum value is 0 s
    hold-off-time:
      type: string
      format: int32
      description: The switch delay time in ms, default value is 0 ms, the step is 100 ms
      minimum: 0
      maximum: 100
  L3acProtocol:
   type: object
   properties:
    protocol-type:
     type: string
     description: The protocol type, default value is static
     enum: ["static","OSPF","ISIS","BGP"]
    static-routes:
     type: array
     items:
      $ref: '#/definitions/StaticRoute'



